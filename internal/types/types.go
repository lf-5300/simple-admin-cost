// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic UUID request in path | 基础UUID地址参数请求
// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// required : true
	// max length : 36
	// min length : 36
	Id string `json:"id" validate:"required,len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The response data of project information | Project信息
// swagger:model ProjectInfo
type ProjectInfo struct {
	BaseIDInfo
	// 项目名称
	Name *string `json:"name,optional"`
	// 项目编码
	Code *string `json:"code,optional"`
	// 创建人
	CreateBy *uint64 `json:"createBy,optional"`
	// 创建时间
	CreateTime *int64 `json:"createTime,optional"`
	// 更新人
	UpdateBy *uint64 `json:"updateBy,optional"`
	// 更新时间
	UpdateTime *int64 `json:"updateTime,optional"`
	// 租户号
	TenantId *uint64 `json:"tenantId,optional"`
	// 是否删除
	Deleted *bool `json:"deleted,optional"`
}

// The response data of project list | Project列表数据
// swagger:model ProjectListResp
type ProjectListResp struct {
	BaseDataInfo
	// Project list data | Project列表数据
	Data ProjectListInfo `json:"data"`
}

// Project list data | Project列表数据
// swagger:model ProjectListInfo
type ProjectListInfo struct {
	BaseListInfo
	// The API list data | Project列表数据
	Data []ProjectInfo `json:"data"`
}

// Get project list request params | Project列表请求参数
// swagger:model ProjectListReq
type ProjectListReq struct {
	PageInfo
	// 项目名称
	Name *string `json:"name,optional"`
	// 项目编码
	Code *string `json:"code,optional"`
}

// Project information response | Project信息返回体
// swagger:model ProjectInfoResp
type ProjectInfoResp struct {
	BaseDataInfo
	// Project information | Project数据
	Data ProjectInfo `json:"data"`
}
